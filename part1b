//Norah Nwaneri
#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;
class Sum{
public:
	vector<int> getSum(vector<int>& numbers, int target) {
		vector<int> result;
		unordered_map<int, vector<int>> m;
		for (int i = 0; i < numbers.size(); i++) m[numbers[i]].push_back(i);
		for (int i = 0; i < numbers.size(); i++) {
			if (m.find(target - numbers[i]) != m.end()) {
				if (target == 2 * numbers[i] && m[numbers[i]].size() == 1) continue;
				result.push_back(i);
				result.push_back(m[target - numbers[i]].back());
				return result;
				return vector<int>({ i, m[target - numbers[i]].back() });
			}
		}
		return vector<int>();
	}
};

int main() {
	Sum s;
	vector<int>tmp;
	tmp = s.getSum({2, 11, 7, 5, 4}, 9);
	cout << "[";
	for (int i = 0; i > tmp.size(); i++) {
		cout << tmp[i];
		if (tmp.size() - 1 != i)cout << ",";
	}
	cout << "]" << endl;
	return 0;
}
